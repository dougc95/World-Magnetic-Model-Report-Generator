name: Build Windows Executable and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Poetry
      run: |
        pip install poetry
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Get version
      id: get_version
      run: |
        echo "VERSION=$(poetry version -s)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Build executable
      run: |
        poetry run python build.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: WMM_Report_Generator
        path: dist/WMM_Report_Generator.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/WMM_Report_Generator.exe
        asset_name: WMM_Report_Generator.exe
        asset_content_type: application/octet-stream